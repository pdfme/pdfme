"use strict";(self.webpackChunk_pdfme_website=self.webpackChunk_pdfme_website||[]).push([[295],{9571:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"converter","title":"Converter","description":"@pdfme/converter can be used in both Node.js and in the browser.","source":"@site/docs/converter.md","sourceDirName":".","slug":"/converter","permalink":"/docs/converter","draft":false,"unlisted":false,"editUrl":"https://github.com/pdfme/pdfme/tree/main/website/docs/converter.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Custom Schemas(Plugins)","permalink":"/docs/custom-schemas"},"next":{"title":"Manipulator","permalink":"/docs/manipulator"}}');var i=r(4848),t=r(8453);const d={},a="Converter",c={},o=[{value:"Installation",id:"installation",level:2},{value:"Features",id:"features",level:2},{value:"pdf2img",id:"pdf2img",level:3},{value:"pdf2size",id:"pdf2size",level:3},{value:"img2pdf",id:"img2pdf",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Types",id:"types",level:2},{value:"Contact",id:"contact",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"converter",children:"Converter"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"@pdfme/converter"})," can be used in both Node.js and in the browser."]}),"\n",(0,i.jsx)(n.p,{children:"Its primary purpose is to convert PDFs into other formats (like images) or to convert various data formats (like Markdown) into PDFs."}),"\n",(0,i.jsx)(n.p,{children:"Although it's still under development, you can already use the following features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Convert PDF to Images"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/pdfme/pdfme/blob/main/packages/converter/src/pdf2img.ts",children:"pdf2img"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Retrieve Each Page's Width and Height"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/pdfme/pdfme/blob/main/packages/converter/src/pdf2size.ts",children:"pdf2size"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Convert Images to PDF"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/pdfme/pdfme/blob/main/packages/converter/src/img2pdf.ts",children:"img2pdf"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Planned conversion features include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Markdown to PDF"}),": ",(0,i.jsx)(n.code,{children:"md2pdf"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PDF to Markdown"}),": ",(0,i.jsx)(n.code,{children:"pdf2md"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install @pdfme/converter\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you want to convert PDFs to images (",(0,i.jsx)(n.code,{children:"pdf2img"}),") in Node.js, you\u2019ll need ",(0,i.jsx)(n.a,{href:"https://github.com/Automattic/node-canvas",children:"node-canvas"})," (^2.11.2), which requires an additional step:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install canvas@^2.11.2\n"})}),"\n",(0,i.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,i.jsx)(n.h3,{id:"pdf2img",children:"pdf2img"}),"\n",(0,i.jsx)(n.p,{children:"Converts PDF pages into images (JPEG or PNG format)."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { pdf2img } from '@pdfme/converter';\n\nconst pdf = new ArrayBuffer(...); // Source PDF\nconst images = await pdf2img(pdf, {\n  imageType: 'png',\n  scale: 1,\n  range: { start: 0, end: 1 },\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"pdf2size",children:"pdf2size"}),"\n",(0,i.jsx)(n.p,{children:"Retrieves the width and height of each page in a PDF."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { pdf2size } from '@pdfme/converter';\n\nconst pdf = new ArrayBuffer(...); // Source PDF\nconst sizes = await pdf2size(pdf, {\n  scale: 1, // Scale factor (default: 1)\n});\n// sizes: Array<{ width: number, height: number }>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"img2pdf",children:"img2pdf"}),"\n",(0,i.jsx)(n.p,{children:"Converts one or more images (JPEG or PNG) into a single PDF file."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { img2pdf } from '@pdfme/converter';\n\nconst image1 = new ArrayBuffer(...); // First image\nconst image2 = new ArrayBuffer(...); // Second image\nconst pdf = await img2pdf([image1, image2], {\n  scale: 1,\n  imageType: 'jpeg',\n  size: { width: 210, height: 297 },\n  margin: [10, 10, 10, 10],\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(n.p,{children:"All functions throw descriptive errors when invalid parameters are provided:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Invalid PDF: ",(0,i.jsx)(n.code,{children:"[@pdfme/converter] Invalid PDF"})]}),"\n",(0,i.jsxs)(n.li,{children:["Empty PDF: ",(0,i.jsx)(n.code,{children:"[@pdfme/converter] The PDF file is empty"})]}),"\n",(0,i.jsxs)(n.li,{children:["Invalid page range: ",(0,i.jsx)(n.code,{children:"[@pdfme/converter] Invalid page range"})]}),"\n",(0,i.jsxs)(n.li,{children:["Empty image array: ",(0,i.jsx)(n.code,{children:"[@pdfme/converter] Input must be a non-empty array of image buffers"})]}),"\n",(0,i.jsxs)(n.li,{children:["Invalid image: ",(0,i.jsx)(n.code,{children:"[@pdfme/converter] Failed to process image"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"types",children:"Types"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"type ImageType = 'jpeg' | 'png';\n\ninterface PageRange {\n  start?: number;\n  end?: number;\n}\n\ninterface Pdf2ImgOptions {\n  scale?: number;\n  imageType?: ImageType;\n  range?: PageRange;\n}\n\ninterface Pdf2SizeOptions {\n  scale?: number;\n}\n\ninterface Img2PdfOptions {\n  scale?: number;\n  imageType?: ImageType;\n  size?: { height: number, width: number }; // in millimeters\n  margin?: [number, number, number, number]; // in millimeters [top, right, bottom, left]\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"contact",children:"Contact"}),"\n",(0,i.jsxs)(n.p,{children:["If you have any questions or suggestions about ",(0,i.jsx)(n.code,{children:"@pdfme/converter"}),", please reach out via:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Discord"}),": ",(0,i.jsx)(n.a,{href:"https://discord.gg/xWPTJbmgNV",children:"https://discord.gg/xWPTJbmgNV"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GitHub Issues"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/pdfme/pdfme/issues",children:"https://github.com/pdfme/pdfme/issues"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>a});var s=r(6540);const i={},t=s.createContext(i);function d(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);